<!--
	Copyright (C) 2012-2021 Trier Center for Digital Humanities, Trier (Germany)

	This file is part of the Online Transcription Editor (OTE).

    OTE is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 2.1 of the License, or
    (at your option) any later version.

    OTE is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with OTE.  If not, see <http://www.gnu.org/licenses/>.

    Diese Datei ist Teil des Online-Transkriptions-Editor (OTE).

    OTE ist Freie Software: Sie können es unter den Bedingungen
    der GNU Lesser General Public License, wie von der Free Software Foundation,
    Version 2.1 der Lizenz oder (nach Ihrer Wahl) jeder späteren
    veröffentlichten Version, weiterverbreiten und/oder modifizieren.

    OTE wird in der Hoffnung, dass es nützlich sein wird, aber
    OHNE JEDE GEWÄHRLEISTUNG, bereitgestellt; sogar ohne die implizite
    Gewährleistung der MARKTFÄHIGKEIT oder EIGNUNG FÜR EINEN BESTIMMTEN ZWECK.
    Siehe die GNU Lesser General Public License für weitere Details.

    Sie sollten eine Kopie der GNU Lesser General Public License zusammen mit diesem
    Programm erhalten haben. Wenn nicht, siehe <http://www.gnu.org/licenses/>.
-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <title>{#gap_title}</title>
    <script type="text/javascript" src="../jquery-3.4.1.min.js"></script>
    <script type="text/javascript" src="js/wce.js"></script>
    <link rel="stylesheet" type="text/css" href="../skin/dialog.css" />
    <link rel="stylesheet" type="text/css" href="../skin/ui.css" />
</head>

<body id="table">
    <form onsubmit="return false;" action="#" name="gapinfo">
        <input type="hidden" id="original_gap_text" name="original_gap_text" value="" />
        <input type="button" id="help" name="help" value="{#help}" onclick="wce_openWindow('docu.htm#deficiency')" />
        <fieldset id="inputContainer">
            <legend>
                {#gap_data}
            </legend>
            <table border="0" cellpadding="4" cellspacing="0" width="100%">
                <tr>
                    <td><label id="gap_reason_dummy_label" for="gap_reason_dummy">{#reason}</label></td>
                    <td>
                        <input type="radio" id="gap_reason_dummy_editorial" name="gap_reason_dummy" value="editorial" onchange="checkstatus_gapreason()">
                        <label for="gap_reason_dummy_editorial">{#untrans}</label>
                    </td>
                    <td>
                        <input type="radio" id="gap_reason_dummy_lacuna" name="gap_reason_dummy" value="lacuna" onchange="checkstatus_gapreason()">
                        <label for="gap_reason_dummy_lacuna">{#lacuna}</label>
                    </td>
                    <td>
                        <input type="radio" id="gap_reason_dummy_illegible" name="gap_reason_dummy" value="illegible" onchange="checkstatus_gapreason()">
                        <label for="gap_reason_dummy_illegible">{#illegible_text}</label>
                    </td>
                    <td>
                        <input type="radio" id="gap_reason_dummy_unspecified" name="gap_reason_dummy" value="unspecified" onchange="checkstatus_gapreason()">
                        <label for="gap_reason_dummy_unspecified">{#unspecified}</label>
                    </td>
                    <td>
                        <input type="radio" id="gap_reason_dummy_inferredPage" name="gap_reason_dummy" value="inferredPage" onchange="checkstatus_gapreason()">
                        <label for="gap_reason_dummy_inferredePage">{#inferredPage}</label>
                    </td>
                    <td>
                        <input type="radio" id="gap_reason_dummy_paperRepaired" name="gap_reason_dummy" value="paperRepaired" onchange="checkstatus_gapreason()">
                        <label for="gap_reason_dummy_paperRepaired">{#paperRepaired}</label>
                    </td>
                    <td>
                        <input type="radio" id="gap_reason_dummy_abbreviatedText" name="gap_reason_dummy" value="abbreviatedText" onchange="checkstatus_gapreason()">
                        <label for="gap_reason_dummy_abbreviatedText">{#abbreviatedText}</label>
                    </td>
                    <td>
                        <input type="radio" id="gap_reason_dummy_notExpected" name="gap_reason_dummy" value="notExpected" onchange="checkstatus_gapreason()">
                        <label for="gap_reason_dummy_notExpected">{#notExpected}</label>
                    </td>
                    <td>
                        <input id="gap_reason" name="gap_reason" value="" type="hidden" />
                    </td>
                </tr>
            </table>
            <table border="0" cellpadding="4" cellspacing="0" width="100%">
                <tr>
                    <td><label id="unit_label" for="unit">{#unit}</label></td>
                    <td>
                        <select id="unit" name="unit" onchange="checkstatus_gapunit()">
                            <option value=""></option>
                            <option value="char">{#unit_char}</option>
                            <option value="line">{#unit_line}</option>
                            <option value="page">{#unit_page}</option>
                            <option value="book">{#unit_book}</option>
                            <option value="chapter">{#unit_chapter}</option>
                            <option value="verse">{#unit_verse}</option>
                            <option value="stanza">{#unit_stanza}</option>
                            <option value="structural_line">{#unit_structural_line}</option>
                            <option value="word">{#unit_word}</option>
                            <option value="unspecified">{#unspecified}</option>
                            <option value="other">{#other}</option>
                        </select></td>
                    <td colspan="2">
                        <input id="unit_other" name="unit_other" type="text" value="" size="50" maxlength="" class="required number min1 mceFocus" />
                    </td>
                </tr>
                <tr>
                    <td><label id="extent_label" for="extent">{#extent}</label></td>
                    <td>
                        <input id="extent" name="extent" type="text" value="" size="10" maxlength="" class="required number min1 mceFocus" onmouseover="XBT(this, {id:'tt_extent'})"/>
                    </td>
                    <td>
                        <input type="button" id="extent_unspecified" value="{#extent}={#unspecified}" onclick="if(document.gapinfo.extent.disabled == false)$('#extent').val('unspecified')" />
                    </td>
                    <td>
                        <input type="button" id="extent_part" value="{#extent}={#part}" onclick="if(document.gapinfo.extent.disabled == false)$('#extent').val('part')" />
                    </td>
                </tr>
                <div id="tt_extent" class="xbtooltip">
                    {#tt_extent}
                </div>
                <tr>
                    <td colspan="2">
                        <input type="checkbox" name="mark_as_supplied" id="mark_as_supplied" value="supplied" onclick="checkstatus_mark_as_supplied()" checked="checked" /> {#mark_as_supplied} </td>
                </tr>
                <tr>
                    <td><label id="supplied_source_label" for="supplied_source">{#supplied_source}</label></td>
                    <td>
                        <select id="supplied_source" name="supplied_source" onclick="checkstatus_supplied_source()">
                            <option value="transcriber">{#transcriber}</option>
                            <option value="restorer">{#restorer}</option>
                            <option value="none">{#none}</option>
                            <option value="other">{#other}</option>
                        </select></td>
                    <td colspan="2">
                        <input id="supplied_source_other" name="supplied_source_other" type="text" value="" size="30" maxlength="" class="required number min1 mceFocus" />
                    </td>
                </tr>
                <tr>
                    <td><label id="untranscribed_language_label" for="untranscribed_language">{#language_name}</label></td>
                    <td>
                        <select id="untranscribed_language" name="untranscribed_language" onchange="checkstatus_language()">
                            <option value=""></option>
                            <option value="ae">{#avestan}</option>
                            <option value="gu">{#gujarati}</option>
                            <option value="fa">{#persian}</option>
                            <option value="fa-Avst">{#persian_avst}</option>
                            <option value="fa-Phlv">{#persian_phlv}</option>
                            <option value="sa">{#sanskrit}</option>
                            <option value="sa-Jaina">{#sanskrit_jaina}</option>
                            <option value="sa-Deva">{#sanskrit_deva}</option>
                            <option value="ae-Avst">{#avestan_avst}</option>
                            <option value="ae-Phlv">{#avestan_phlv}</option>
                            <option value="ae-fa">{#avestan_fa}</option>
                            <option value="ae-Gujr">{#avestan_gujr}</option>
                            <option value="pal-Avst">{#pahlavi_avst}</option>
                            <option value="pal-Phlv">{#pahlavi_phlv}</option>
                            <option value="pal-Gujr">{#pahlavi_gujr}</option>
                            <option value="pal-Phli">{#pahlavi_phli}</option>
                            <option value="pal-fa">{#pahlavi_fa}</option>
                            <option value="gu-Arab">{#gujarati_arab}</option>
                            <option value="gu-Gujr">{#gujarati_gujr}</option>
                            <option value="gu-Jaina">{#gujarati_jaina}</option>
                            <option value="gu-Deva">{#gujarati_deva}</option>
                            <option value="gu-Avst">{#gujarati_avst}</option>
                            <option value="ar">{#arabic}</option>
                            <option value="other">{#other}</option>
                        </select>
                    </td>
                    <td>
                        <input id="untranscribed_language_other" name="untranscribed_language_other" type="text" value="" size="30" />
                    </td>
                </tr>
            </table>
        </fieldset>
        <div class="mceActionPanel">
            <input type="button" id="insert" name="insert" value="{#insert}"
            onclick="var cont=testInput();
            if(cont=='0'){writeWceNodeInfo();}
            else if(cont=='1'){alert('{#empty_other}');}
            else if(cont=='2'){alert('{#empty_extent}');}
            else if(cont=='3'){alert('{#invalid_extent}');}" />
            <input type="button" id="cancel" name="cancel" value="{#cancel}" onclick="parent.tinymce.activeEditor.windowManager.close();" />
        </div>
    </form>
</body>
<script type="text/javascript">
    $(document).ready(function() {
        ed = parent.tinymce.activeEditor;
        translate();
        setConstants();
        init();
    });

    var info = false;

    function translate() {
        var c = document.body.innerHTML;
        var d = document.title;
        var a;
        if (parent.tinymce.isIE) {
            c = c.replace(/ (value|title|alt)=([^"][^\s>]+)/gi, ' $1="$2"')
        }
        a = c.replace(/\{\#([^\}]+)\}/g, function(a, b) {
            var c = parent.tinymce.translate(b);
            return (c != b) ? c : '{#' + b + '}';
        });
        if (a != c) {
            document.body.innerHTML = a
        }
        a = d.replace(/\{\#([^\}]+)\}/g, function(a, b) {
            var c = parent.tinymce.translate(b);
            return (c != b) ? c : '{#' + b + '}';
        });
        if (a != d) {
            document.title = d = a
        }
    }

    function init() {
        comboBindReturnEvent('insert');
        wceInfoInit('gap');
        readWceNodeInfo();

        setstatus_gapreason();
        checkstatus_gapreason();
        checkstatus_gapunit();
        checkstatus_supplied_source();
        if (ed.WCE_VAR.isc && (!ed.WCE_VAR.type || (ed.WCE_VAR.type && !ed.WCE_VAR.type == 'gap'))) { // make it work in "edit" mode
            $('#mark_as_supplied').attr({
                "checked": false,
                "disabled": true
            });
            $('#supplied_source').attr({
                "disabled": true
            });
        }
        checkstatus_mark_as_supplied();
        document.getElementById("extent_unspecified").style.background = '#F1F1F1';
        document.getElementById("extent_part").style.background = '#F1F1F1';
        info = false;
    }

    function testInput() {
        var cont = testOther();
        if (!cont) {
            return 1;
        }
        cont = testUnit();
        if (!cont) {
            return 2;
        }
        cont = testExtent();
        if (!cont) {
           return 3;
        }
        return 0;
    }

    function checkstatus_gapreason() {
        document.gapinfo.untranscribed_language.disabled = true;
        document.getElementById('untranscribed_language').style.backgroundColor = "#CCCCCC";
        if (radioWert(document.gapinfo.gap_reason_dummy) === "editorial") {
            document.gapinfo.gap_reason.value = "editorial";
            document.gapinfo.untranscribed_language.disabled = false;
            document.getElementById('untranscribed_language').style.backgroundColor = "white";
            document.gapinfo.mark_as_supplied.checked = false;
            checkstatus_mark_as_supplied();
        } else if (radioWert(document.gapinfo.gap_reason_dummy) === "lacuna")
            document.gapinfo.gap_reason.value = "lacuna";
        else if (radioWert(document.gapinfo.gap_reason_dummy) === "illegible")
            document.gapinfo.gap_reason.value = "illegible";
        else if (radioWert(document.gapinfo.gap_reason_dummy) === "inferredPage")
            document.gapinfo.gap_reason.value = "inferredPage";
        else if (radioWert(document.gapinfo.gap_reason_dummy) === "paperRepaired")
            document.gapinfo.gap_reason.value = "paperRepaired";
        else if (radioWert(document.gapinfo.gap_reason_dummy) === "abbreviatedText")
            document.gapinfo.gap_reason.value = "abbreviatedText";
        else if (radioWert(document.gapinfo.gap_reason_dummy) === "notExpected")
            document.gapinfo.gap_reason.value = "notExpected";
        else {
            document.gapinfo.gap_reason.value = "unspecified";
            if (info)
                alert(parent.tinymce.translate('info_lacuna_illegible'));
        }
        info = true;
        checkstatus_language();
    }

    function radioWert(rObj) {
        for (var i = 0; i < rObj.length; i++)
            if (rObj[i].checked)
                return rObj[i].value;
        return false;
    }

    function setstatus_gapreason() {
        if (document.gapinfo.gap_reason.value == "editorial")
            document.gapinfo.gap_reason_dummy_editorial.checked = true;
        else if (document.gapinfo.gap_reason.value == "lacuna")
            document.gapinfo.gap_reason_dummy_lacuna.checked = true;
        else if (document.gapinfo.gap_reason.value == "unspecified")
            document.gapinfo.gap_reason_dummy_unspecified.checked = true;
        else if (document.gapinfo.gap_reason.value == "inferredPage")
            document.gapinfo.gap_reason_dummy_inferredPage.checked = true;
        else if (document.gapinfo.gap_reason.value == "paperRepaired")
            document.gapinfo.gap_reason_dummy_paperRepaired.checked = true;
        else if (document.gapinfo.gap_reason.value == "abbreviatedText")
            document.gapinfo.gap_reason_dummy_abbreviatedText.checked = true;
        else if (document.gapinfo.gap_reason.value == "notExpected")
            document.gapinfo.gap_reason_dummy_notExpected.checked = true;
        else //default
            document.gapinfo.gap_reason_dummy_illegible.checked = true;
        checkstatus_language();
    }

    function checkstatus_gapunit() {
        if (document.gapinfo.unit.disabled == true) {
            document.gapinfo.unit_other.disabled = true;
            document.getElementById('unit_other').style.backgroundColor = "#CCCCCC";
            document.gapinfo.extent.disabled = true;
            document.getElementById('extent').style.backgroundColor = "#CCCCCC";
            document.gapinfo.extent_unspecified.disabled = true;
            document.gapinfo.extent_part.disabled = true;
            return;
        }

        if (document.gapinfo.unit.options[11].selected == true) { //other unit
            document.gapinfo.unit_other.disabled = false;
            document.getElementById('unit_other').style.backgroundColor = "white";
        } else {
            document.gapinfo.unit_other.disabled = true;
            document.getElementById('unit_other').style.backgroundColor = "#CCCCCC";
        }

        if (document.gapinfo.unit.options[0].selected == true) { // no unit given
            document.gapinfo.extent.disabled = true;
            document.getElementById('extent').style.backgroundColor = "#CCCCCC";
            document.gapinfo.extent_unspecified.disabled = true;
            document.gapinfo.extent_part.disabled = true;
        } else {
            document.gapinfo.extent.disabled = false;
            document.getElementById('extent').style.backgroundColor = "white";
            document.gapinfo.extent_unspecified.disabled = false;
            document.gapinfo.extent_part.disabled = false;
        }

        document.gapinfo.extent.focus();

        if (!ed.WCE_VAR.isc || !add_new_wce_node) { //real selection or edit mode
            if (document.gapinfo.unit.options[1].selected == true || document.gapinfo.unit.options[2].selected == true) { // char or line
                document.gapinfo.mark_as_supplied.disabled = false;
                if (document.gapinfo.mark_as_supplied.checked == true) {
                    document.gapinfo.supplied_source.disabled = false;
                    document.getElementById('supplied_source').style.backgroundColor = "white";
                    document.gapinfo.supplied_source_other.disabled = false;
                    document.getElementById('supplied_source_other').style.backgroundColor = "white";
                } else {
                    document.gapinfo.supplied_source.disabled = true;
                    document.getElementById('supplied_source').style.backgroundColor = "#CCCCCC";
                    document.gapinfo.supplied_source_other.disabled = true;
                    document.getElementById('supplied_source_other').style.backgroundColor = "#CCCCCC";
                }
            } else if (document.gapinfo.unit.options[3].selected == true) { //page
                document.gapinfo.mark_as_supplied.checked = false;
                document.gapinfo.mark_as_supplied.disabled = true;
                document.gapinfo.supplied_source.disabled = true;
                document.getElementById('supplied_source').style.backgroundColor = "#CCCCCC";
            } else {
                document.gapinfo.mark_as_supplied.disabled = false;
                if (document.gapinfo.mark_as_supplied.checked == true) {
                    document.gapinfo.supplied_source.disabled = false;
                    document.getElementById('supplied_source').style.backgroundColor = "white";
                    document.gapinfo.supplied_source_other.disabled = false;
                    document.getElementById('supplied_source_other').style.backgroundColor = "white";
                } else {
                    document.gapinfo.supplied_source.disabled = true;
                    document.getElementById('supplied_source').style.backgroundColor = "#CCCCCC";
                    document.gapinfo.supplied_source_other.disabled = true;
                    document.getElementById('supplied_source_other').style.backgroundColor = "#CCCCCC";
                }
            }
        }
    }

    function setstatus_mark_as_supplied() {
        if (document.gapinfo.mark_as_supplied.value == "supplied") {
            document.gapinfo.mark_as_supplied.checked = true;
        }
    }

    function checkstatus_mark_as_supplied() {
        if (document.gapinfo.mark_as_supplied.checked == true) {
            document.gapinfo.supplied_source.disabled = false;
            document.getElementById('supplied_source').style.backgroundColor = "white";
            document.gapinfo.unit.disabled = true;
            document.getElementById('unit').style.backgroundColor = "#CCCCCC";
            document.gapinfo.unit_other.disabled = true;
            document.getElementById('unit_other').style.backgroundColor = "#CCCCCC";
            document.gapinfo.extent.disabled = true;
            document.getElementById('extent').style.backgroundColor = "#CCCCCC";
        } else {
            document.gapinfo.supplied_source.disabled = true;
            document.getElementById('supplied_source').style.backgroundColor = "#CCCCCC";
            document.gapinfo.supplied_source_other.disabled = true;
            document.getElementById('supplied_source_other').style.backgroundColor = "#CCCCCC";
            document.gapinfo.unit.disabled = false;
            document.getElementById('unit').style.backgroundColor = "white";
        }
        //checkstatus_supplied_source();
        checkstatus_gapunit();
    }

    function checkstatus_supplied_source() {
        if (ed.WCE_VAR.isc) {
            if (document.gapinfo.mark_as_supplied.disabled == true) {
                document.gapinfo.supplied_source.disabled = true;
                document.getElementById('supplied_source').style.backgroundColor = "#CCCCCC";
                document.gapinfo.supplied_source_other.disabled = true;
                document.getElementById('supplied_source_other').style.backgroundColor = "#CCCCCC";
            } else {
                document.gapinfo.supplied_source.disabled = false;
                document.getElementById('supplied_source').style.backgroundColor = "white";
                document.gapinfo.supplied_source_other.disabled = false;
                document.getElementById('supplied_source_other').style.backgroundColor = "white";
            }
        }

        if (document.gapinfo.supplied_source.options[3].selected == true) {
            document.gapinfo.supplied_source_other.disabled = false;
            document.getElementById('supplied_source_other').style.backgroundColor = "white";
        } else {
            document.gapinfo.supplied_source_other.disabled = true;
            document.getElementById('supplied_source_other').style.backgroundColor = "#CCCCCC";
        }

        /*if (document.gapinfo.mark_as_supplied.checked == false) {
        	document.gapinfo.supplied_source.disabled = true;
        	document.gapinfo.supplied_source_other.disabled = true;
        	document.getElementById('supplied_source_other').style.backgroundColor = "#CCCCCC";
        }*/

    }

    function checkstatus_language() {
        if ($('#untranscribed_language').val() === 'other') {
            $('#untranscribed_language_other').attr('disabled', false);
            $('#untranscribed_language_other').css('background', 'white');
            $('#untranscribed_language_other').css('background', 'white');
        } else {
            $('#untranscribed_language_other').attr('disabled', true);
            $('#untranscribed_language_other').css('background', '#ccc');
        }
    }

    function testOther() {
        if (document.gapinfo.mark_as_supplied.checked && document.gapinfo.supplied_source.options[3].selected == true &&
            document.getElementById('supplied_source_other').value == '') {
            return false;
        }
        if (document.gapinfo.unit.options[11].selected == true && document.getElementById('unit_other').value == '') {
            return false;
        }
        //if (document.gapinfo.gap_reason.options[5].selected == true && document.getElementById('gap_reason_other').value == '')
        //{ return false; }
        return true;
    }

    function testUnit() {
        if (($('#unit').val() !== '' && $.trim($('#extent').val()) === '')
            || (document.gapinfo.gap_reason.value == "editorial" && $('#unit').val() == '')) {
            return false;
        }
        return true;
    }

    function testExtent() {
        if ($('#unit').val() !== '' && $('#unit').val() !== 'other'
         && $('#unit').val() !== 'unspecified') {
            var e = $.trim($('#extent').val()); //has to be !== '' because of testUnit
            if (e === 'rest' || e === 'all')
               return true;
            else
               return (e>=0 && parseInt(e)==e);
        }
        return true;
    }

    if (!parent.tinymce.isIE) {
        $(document).keydown(function(e) {
            var evt = e || window.event
            if (evt.keyCode == 13 || evt.keyCode == 10) {
                document.getElementById('insert').click();
                return false;
            }
        });
    }

</script>
</html>
