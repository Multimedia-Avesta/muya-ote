<!--
	Copyright (C) 2012-2018 Trier Center for Digital Humanities, Trier (Germany)

	This file is part of the Online Transcription Editor (OTE).

    OTE is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 2.1 of the License, or
    (at your option) any later version.

    OTE is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with OTE.  If not, see <http://www.gnu.org/licenses/>.

    Diese Datei ist Teil des Online-Transkriptions-Editor (OTE).

    OTE ist Freie Software: Sie können es unter den Bedingungen
    der GNU Lesser General Public License, wie von der Free Software Foundation,
    Version 2.1 der Lizenz oder (nach Ihrer Wahl) jeder späteren
    veröffentlichten Version, weiterverbreiten und/oder modifizieren.

    OTE wird in der Hoffnung, dass es nützlich sein wird, aber
    OHNE JEDE GEWÄHRLEISTUNG, bereitgestellt; sogar ohne die implizite
    Gewährleistung der MARKTFÄHIGKEIT oder EIGNUNG FÜR EINEN BESTIMMTEN ZWECK.
    Siehe die GNU Lesser General Public License für weitere Details.

    Sie sollten eine Kopie der GNU Lesser General Public License zusammen mit diesem
    Programm erhalten haben. Wenn nicht, siehe <http://www.gnu.org/licenses/>.
-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" style="height:100%">

<head>
    <title>{#verses_title}</title>
    <script type="text/javascript" src="js/wce.js"></script>
    <script type="text/javascript" src="../jquery.js"></script>
    <link rel="stylesheet" type="text/css" href="../skin/dialog.css" />
    <link rel="stylesheet" type="text/css" href="../skin/ui.css" />
</head>

<body id="table">
    <form onsubmit="return false;" action="#">
        <input type="button" id="help" name="help" value="{#help}" onclick="wce_openWindow('docu.htm#verse')" style="margin-bottom:100px" />
        <div id="deleteBookDiv" style="margin-top:10px">
            <div>
                <input type="radio" id="deleteBookRadio" onclick="canDeleteBook();" name="versemodify" />{#book_remove}
            </div>
            <fieldset style="border:1px solid #ccc;width:auto; height:auto; overflow-y:auto" id="bookList"></fieldset>
        </div>
        <div id="deleteChapterDiv" style="margin-top:10px">
            <div>
                <input type="radio" id="deleteChapterRadio" onclick="canDeleteChapter();" name="versemodify" />{#chapter_remove}
            </div>
            <fieldset style="border:1px solid #ccc;width:auto; height:auto; overflow-y:auto" id="chapterList"></fieldset>
        </div>
        <div id="deleteStanzaDiv" style="margin-top:10px">
            <div>
                <input type="radio" id="deleteStanzaRadio" onclick="canDeleteStanza();" name="versemodify" />{#stanza_remove}
            </div>
            <fieldset style="border:1px solid #ccc;width:auto; height:auto; overflow-y:auto" id="stanzaList"></fieldset>
        </div>
        <div id="deleteVerseDiv" style="margin-top:10px">
            <div>
                <input type="radio" id="deleteVerseRadio" onclick="canDeleteVerse();" name="versemodify" />{#verse_remove}
            </div>
            <fieldset style="border:1px solid #ccc;width:auto; height:auto; overflow-y:auto" id="verseList"></fieldset>
        </div>
        <div class="mceActionPanel" style="margin-bottom:10px">
            <input type="button" id="insert" name="insert" value="{#apply}" onclick="update();parent.tinymce.activeEditor.windowManager.close();" />
            <input type="button" id="cancel" name="cancel" value="{#cancel}" onclick="parent.tinymce.activeEditor.windowManager.close();" />
        </div>
    </form>
</body>
<script type="text/javascript">
    var verseNode;
    var contentWithVerse;
    var chapterNr, bookNr, stanzaNr;
    var subverse = 96;
    var v_old = '';
    var spanValue_cnt = 96;
    var spanValue_old = '';

    $(document).ready(function() {
        var _ed = parent.tinymce.activeEditor;
        ed = _ed;
        translate();
        setConstants();
        init();
    });

    function translate() {
        var c = document.body.innerHTML;
        var d = document.title;
        var a;
        if (parent.tinymce.isIE) {
            c = c.replace(/ (value|title|alt)=([^"][^\s>]+)/gi, ' $1="$2"')
        }
        a = c.replace(/\{\#([^\}]+)\}/g, function(a, b) {
            var c = parent.tinymce.translate(b);
            return (c != b) ? c : '{#' + b + '}';
        });
        if (a != c) {
            document.body.innerHTML = a
        }
        a = d.replace(/\{\#([^\}]+)\}/g, function(a, b) {
            var c = parent.tinymce.translate(b);
            return (c != b) ? c : '{#' + b + '}';
        });
        if (a != d) {
            document.title = d = a
        }
    }

    function canDeleteVerse() {
        $('#deleteVerseRadio').prop('checked', true);
        $('#verseList').prop('disabled', false);
        $('#insertVerseNumber').prop('disabled', true);
        $('#insertStanzaNumber').prop('disabled', true);
        $('#insertChapterNumber').prop('disabled', true);
        $('#insertBookName').prop('disabled', true);
        $('#insertBookName_other').prop('disabled', true);
        $('#stanzaList').prop('disabled', true);
        $('#chapterList').prop('disabled', true);
        $('#bookList').prop('disabled', true);
    }

    function canDeleteStanza() {
        $('#deleteStanzaRadio').prop('checked', true);
        $('#stanzaList').prop('disabled', false);
        $('#insertVerseNumber').prop('disabled', true);
        $('#insertStanzaNumber').prop('disabled', true);
        $('#insertChapterNumber').prop('disabled', true);
        $('#insertBookName').prop('disabled', true);
        $('#insertBookName_other').prop('disabled', true);
        $('#verseList').prop('disabled', true);
        $('#chapterList').prop('disabled', true);
        $('#bookList').prop('disabled', true);
    }

    function canDeleteChapter() {
        $('#deleteChapterRadio').prop('checked', true);
        $('#chapterList').prop('disabled', false);
        $('#insertVerseNumber').prop('disabled', true);
        $('#insertStanzaNumber').prop('disabled', true);
        $('#insertChapterNumber').prop('disabled', true);
        $('#insertBookName').prop('disabled', true);
        $('#insertBookName_other').prop('disabled', true);
        $('#verseList').prop('disabled', true);
        $('#stanzaList').prop('disabled', true);
        $('#bookList').prop('disabled', true);
    }

    function canDeleteBook() {
        $('#deleteBookRadio').prop('checked', true);
        $('#bookList').prop('disabled', false);
        $('#insertVerseNumber').prop('disabled', true);
        $('#insertStanzaNumber').prop('disabled', true);
        $('#insertChapterNumber').prop('disabled', true);
        $('#insertBookName').prop('disabled', true);
        $('#insertBookName_other').prop('disabled', true);
        $('#verseList').prop('disabled', true);
        $('#stanzaList').prop('disabled', true);
        $('#chapterList').prop('disabled', true);
    }

    function init() {
        canDeleteVerse();
        contentWithVerse = $('<div/>').html(ed.getContent())[0]; //selects everything starting the complete chapter
        $('#verseList').html(getVerseList(contentWithVerse));
        $('#stanzaList').html(getStanzaList(contentWithVerse));
        $('#chapterList').html(getChapterList(contentWithVerse));
        $('#bookList').html(getBookList(contentWithVerse));
        if (wce_node) {
            if (wce_node.nodeName.toLowerCase() == 'span') {
                $('#insertDiv input').prop('disabled', true);
            }
        }
    }

    function getVerseList(node) {
        var out = "";
        bookNr = (bookNr) ? bookNr : '';
        chapterNr = (chapterNr) ? chapterNr : '';
        stanzaNr = (stanzaNr) ? stanzaNr : '';

        if (!node || node.nodeType != 1) {
            return out;
        }

        var list = node.childNodes;
        for (var i = 0, len = list.length; i < len; i++) {
            var n = list[i];
            if (n.nodeType == 1) {
                out += getVerseList(n);
            }
        }

        if ($(node).hasClass('book_number')) {
            bookNr = $.trim(node.innerHTML);
        } else if ($(node).hasClass('chapter_number')) {
            subverse = 96;
            v_old = '';
            var v = $.trim(node.innerHTML);
            if (v) {
                if (v === 'Inscriptio' || v === 'Subscriptio') //Special handling for Inscriptio and Subscriptio
                    out += '<input type="checkbox" value="' + v + '">' + v + '</input><br />';
                else
                    chapterNr = v;
            }
        } else if ($(node).hasClass('stanza_number')) {
            var v = $.trim(node.innerHTML);
            if (v) {
                stanzaNr = v;
            }
        } else if ($(node).hasClass('verse_number')) {
            var v = $.trim(node.innerHTML);
            if (v && v != '') {
                if (v_old == v)
                    subverse++;
                else
                    subverse = 96;
                if (subverse == 96)
                    out += '<input type="checkbox" value="' + bookNr + '.' + chapterNr + '.' + stanzaNr + '.' + v + '">Verse ' + bookNr + '.' + chapterNr + '.' + stanzaNr + '.' + v + '</input><br />';
                else
                    out += '<input type="checkbox" value="' + bookNr + '.' + chapterNr + '.' + stanzaNr + '.' + v + '-' + String.fromCharCode(subverse) + '">Verse ' + bookNr + '.' + chapterNr + '.' + stanzaNr + '.' + v + '</input><br />';
                v_old = v;
            }
        }
        return out;
    }

    function getStanzaList(node) {
        var out = "";
        if (!node || node.nodeType != 1) {
            return out;
        }

        var list = node.childNodes;
        for (var i = 0, len = list.length; i < len; i++) {
            var n = list[i];
            if (n.nodeType == 1) {
                out += getStanzaList(n);
            }
        }

        if ($(node).hasClass('book_number')) {
            bookNr = $.trim(node.innerHTML);
        } else if ($(node).hasClass('chapter_number') && $.trim(node.innerHTML) !== 'Inscriptio' && $.trim(node.innerHTML) !== 'Subscriptio') {
            chapterNr = $.trim(node.innerHTML);
        } else if ($(node).hasClass('stanza_number')) {
            var v = $.trim(node.innerHTML);
            var id = node.getAttribute('id');
            if (v && v != '')
                out += '<input type="checkbox" value="' + bookNr + '.' + chapterNr + '.' + v + '" id="' + id + '">Stanza ' + bookNr + '.' + chapterNr + '.' + v + '</input><br />';
        }
        return out;
    }

    function getChapterList(node) {
        var out = "";
        if (!node || node.nodeType != 1) {
            return out;
        }

        var list = node.childNodes;
        for (var i = 0, len = list.length; i < len; i++) {
            var n = list[i];
            if (n.nodeType == 1) {
                out += getChapterList(n);
            }
        }

        if ($(node).hasClass('book_number')) {
            bookNr = $.trim(node.innerHTML);
        } else if ($(node).hasClass('chapter_number') && $.trim(node.innerHTML) !== 'Inscriptio' && $.trim(node.innerHTML) !== 'Subscriptio') {
            var v = $.trim(node.innerHTML);
            var id = node.getAttribute('id');
            if (v && v != '')
                out += '<input type="checkbox" value="' + bookNr + '.' + v + '" id="' + id + '">Chapter ' + bookNr + '.' + v + '</input><br />';
        }
        return out;
    }

    function getBookList(node) {
        var out = "";
        if (!node || node.nodeType != 1) {
            return out;
        }

        var list = node.childNodes;
        for (var i = 0, len = list.length; i < len; i++) {
            var n = list[i];
            if (n.nodeType == 1) {
                out += getBookList(n);
            }
        }

        if ($(node).hasClass('book_number')) {
            var v = $.trim(node.innerHTML);
            var id = node.getAttribute('id');
            if (v && v != '')
                out += '<input type="checkbox" value="' + v + '" id="' + id + '">Book ' + v + '</input><br />';
        }
        return out;
    }


    function update() {
        if ($('#deleteVerseRadio').is(':checked')) {
            var verseList = $('#verseList').find('input:checkbox');
            for (var i = 0, len = verseList.length; i < len; i++) {
                var cb = verseList[i];
                var currentBook = '';
                if ($(cb).is(':checked')) {
                    var pos = $(cb).val().indexOf('.'); // usually bookNr.chapterNr.stanzaNr.verseNr
                    if (pos == -1) { //Inscriptio or Subscriptio found
                        var bookNr = '';
                        var chapterNr = $(cb).val().trim();
                        var stanzaNr = '';
                        var verseNr = '';
                    } else {
                        var bookNr = $(cb).val().substr(0, pos);
                        var cbnew = $(cb).val().substr(pos + 1); // chapterNr.stanzaNr.verseNr
                        pos = cbnew.indexOf('.');
                        var chapterNr = cbnew.substr(0, pos);
                        var cbnewnew = cbnew.substr(pos + 1);
                        pos = cbnewnew.indexOf('.');
                        var stanzaNr = cbnewnew.substr(0, pos);
                        var verseNr = cbnewnew.substr(pos + 1);
                    }
                    var startNode = null,
                        endNode = null;
                    var spanList = $(contentWithVerse).find('span');
                    for (var j = 0, len2 = spanList.length; j < len2; j++) {
                        var span = spanList[j];
                        var spanValue = $(span).html().trim();
                        if ($(span).hasClass('lection_number')) {
                            if (startNode) { //if next entry after marked verse
                                endNode = span;
                                break;
                            }
                        } else if ($(span).hasClass('book_number')) {
                            currentBook = spanValue;
                            if (startNode) { //if next entry after marked verse
                                endNode = span;
                                break;
                            }
                        } else if ($(span).hasClass('chapter_number')) {
                            var currentChapter = spanValue;
                            if (startNode) { //if next entry after marked verse
                                endNode = span;
                                break;
                            }
                            if (currentChapter == chapterNr && verseNr == '') //Inscriptio or Subscriptio
                                startNode = span; // set startNode; next verse number element will be endNode
                        } else if ($(span).hasClass('stanza_number')) {
                            var currentStanza = spanValue;
                            spanValue_cnt = 96;
                            spanValue_old = '';
                            if (startNode) {
                                endNode = span;
                                break;
                            }
                        } else if ($(span).hasClass('verse_number')) {
                            if (spanValue_old == spanValue) {
                                spanValue_cnt++;
                                spanValue = spanValue + '-' + String.fromCharCode(spanValue_cnt);
                            } else {
                                spanValue_cnt = 96;
                            }
                            if (startNode && verseNr !== '') {
                                endNode = span;
                                break;
                            } else if (spanValue == verseNr && currentStanza == stanzaNr && currentChapter == chapterNr && currentBook == bookNr && verseNr != '') {
                                startNode = span;
                            }
                            spanValue_old = spanValue;
                        }
                    }
                    if (endNode == null) //startNode was last span node of document
                        endNode = ed.dom.getRoot().childNodes[ed.dom.getRoot().childNodes.length - 1];
                    delVerse(startNode, endNode);
                }
            }
        } else if ($('#deleteStanzaRadio').is(':checked')) {
            var stanzaList = $('#stanzaList').find('input:checkbox');
            for (var i = 0, len = stanzaList.length; i < len; i++) {
                var cb = stanzaList[i];
                var currentBook = ''; //make sure deletion works, even when there is no book name used
                if ($(cb).is(':checked')) {
                    var id = $(cb).attr('id');
                    var pos = $(cb).val().indexOf('.');
                    var bookNr = $(cb).val().substr(0, pos);
                    var cbnew = $(cb).val().substr(pos + 1); // chapterNr.stanzaNr
                    pos = cbnew.indexOf('.');
                    var chapterNr = cbnew.substr(0, pos);
                    var stanzaNr = cbnew.substr(pos + 1);
                    var startNode = null,
                        endNode = null;
                    var spanList = $(contentWithVerse).find('span');
                    for (var j = 0, len2 = spanList.length; j < len2; j++) {
                        var span = spanList[j];
                        var spanValue = $(span).html().trim();
                        if ($(span).hasClass('lection_number')) {
                            if (startNode) { //if next entry after marked verse
                                endNode = span;
                                break;
                            }
                        } else if ($(span).hasClass('book_number')) {
                            currentBook = spanValue;
                            if (startNode) { //if next entry after marked verse
                                endNode = span;
                                break;
                            }
                        } else if ($(span).hasClass('chapter_number')) {
                            var currentChapter = spanValue;
                            spanValue_cnt = 96;
                            spanValue_old = '';
                            if (startNode) { //if next entry after marked verse
                                endNode = span;
                                break;
                            }
                            //if (currentChapter == chapterNr && verseNr == '') //Inscriptio or Subscriptio
                            //	startNode=span; // set startNode; next verse number element will be endNode
                        } else if ($(span).hasClass('stanza_number')) {
                            if (spanValue_old == spanValue) {
                                spanValue_cnt++;
                                spanValue = spanValue + '-' + String.fromCharCode(spanValue_cnt);
                            } else {
                                spanValue_cnt = 96;
                            }
                            if (startNode && stanzaNr !== '') {
                                endNode = span;
                                break;
                            } else if (spanValue == stanzaNr && currentChapter == chapterNr && currentBook == bookNr && stanzaNr != '') {
                                startNode = span;
                            }
                            spanValue_old = spanValue;
                        }
                    }
                    if (endNode == null) //startNode was last span node of document
                        endNode = ed.dom.getRoot().childNodes[ed.dom.getRoot().childNodes.length - 1];
                    delVerse(startNode, endNode);
                }
            }
        } else if ($('#deleteChapterRadio').is(':checked')) {
            var chapterList = $('#chapterList').find('input:checkbox');
            for (var i = 0, len = chapterList.length; i < len; i++) {
                var cb = chapterList[i];
                if ($(cb).is(':checked')) {
                    var id = $(cb).attr('id');
                    var pos = $(cb).val().indexOf('.');
                    var bookNr = $(cb).val().substr(0, pos);
                    var chapterNr = $(cb).val().substr(pos + 1); // bookNr.chapterNr
                    var startNode = null,
                        endNode = null;
                    var spanList = $(contentWithVerse).find('span');
                    // Loop through all <span> elements
                    for (var j = 0, len2 = spanList.length; j < len2; j++) {
                        var span = spanList[j]; //actual <span>
                        var spanValue = $(span).html().trim();
                        if ($(span).hasClass('chapter_number')) {
                            if (spanValue == chapterNr && span.id == id)
                                $(span).remove();
                        }
                    }
                }
            }
        } else if ($('#deleteBookRadio').is(':checked')) {
            var bookList = $('#bookList').find('input:checkbox');
            for (var i = 0, len = bookList.length; i < len; i++) {
                var cb = bookList[i];
                if ($(cb).is(':checked')) {
                    var id = $(cb).attr('id');
                    var bookNr = $(cb).val();
                    var startNode = null,
                        endNode = null;
                    var spanList = $(contentWithVerse).find('span');
                    // Loop through all <span> elements
                    for (var j = 0, len2 = spanList.length; j < len2; j++) {
                        var span = spanList[j]; //actual <span>
                        var spanValue = $(span).html().trim();
                        if ($(span).hasClass('book_number')) {
                            if (spanValue == bookNr && span.id == id)
                                $(span).remove();
                        }
                    }
                }
            }
        }
        ed.setContent($(contentWithVerse).html());
    }

    function getCursorPositionInTextOf(element) {
        var range = document.createRange(),
            curRange = window.getSelection().getRangeAt(0);
        range.setStart(element, 0);
        range.setEnd(curRange.startContainer, curRange.startOffset);
        //Measure the length of the text from the start of the given element to the start of the current range (position of the cursor)
        return document.createElement("div").appendChild(range.cloneContents()).textContent.length;
    }

    function delVerse(startNode, endNode) {
        var start;
        var _delVerse = function(node) {
            if (node == startNode) {
                start = true;
            } else if (node == endNode) {
                start = false;
                return true;
            } else {
                var temp = node.childNodes;
                var list = new Array();
                for (var i = 0, len = temp.length; i < len; i++) {
                    list[i] = temp[i];
                }
                for (var i = 0, len = list.length; i < len; i++) {
                    var n = list[i];
                    if (_delVerse(n)) {
                        return true;
                    }
                }
            }
            if (start) {
                $(node).remove();
            }
        }

        _delVerse(contentWithVerse);
    }

    if (!parent.tinymce.isIE) {
        $(document).keydown(function(e) {
            var evt = e || window.event
            if (evt.keyCode == 13 || evt.keyCode == 10) {
                document.getElementById('insert').click();
                return false;
            }
        });
    }

</script>

</html>
